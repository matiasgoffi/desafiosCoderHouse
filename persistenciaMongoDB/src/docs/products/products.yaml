paths:
  /api/products/limit/{limit}:
    get:
     summary: Obtener todos los productos
     tags: 
      - Productos
     parameters:
      - name: limit
        in: path
        required: false
        description: numero limite de productos a obtener
        schema:
          $type: number 
     responses:
      "200":
        description: Todos los productos obtenidos correctamente
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#components/schemas/Producto"
      "401":
        description: Error por falta de permisos
      "500":
        description: Error del Servidor
  /api/products/{pid}:
    get:
     summary: Obtener un producto por ID
     tags: 
      - Productos
     parameters:
      - name: pid
        in: path
        required: true
        description: id del producto a obtener
        schema:
          $type: objectId 
     responses:
      "200":
        description: producto obtenido correctamente
        content:
          application/json:
            schema:
              type: object
              items:
                $ref: "#components/schemas/Producto"
      "401":
        description: Error por falta de permisos
      "500":
        description: Error del Servidor
    put:
      summary: actualizar un producto
      tags: 
        - Productos
      parameters:
        - name: pid
          in: path
          required: true
          description: id del producto a actualizar
          schema:
            $type: objectId
      requestBody:
        required: true
        content:
          application/json:
            schema:
                $ref: "#components/requestBodies/updateProduct"
      responses:
        "200":
          description: producto actualizado correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  payload:
                    $ref: "#components/schemas/Producto"
        "500":
          description: Error interno del servidor
    delete:
      summary: eliminar un producto
      tags: 
        - Productos
      parameters:
        - name: pid
          in: path
          required: true
          description: id del producto a eliminar
          schema:
            $type: objectId
      responses:
        "200":
          description: producto eliminado correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  payload:
                    $ref: "#components/schemas/Producto"
        "500":
          description: Error interno del servidor
  /api/products:
    post:
      summary: agregar un producto
      tags: 
        - Productos
      requestBody:
        required: true
        content:
          application/json:
            schema:
                $ref: "#components/requestBodies/updateProduct"
      responses:
        "200":
          description: producto agregado correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  payload:
                    $ref: "#components/schemas/Producto"
        "500":
          description: Error interno del servidor
    
  
components:
  schemas:
    Producto:
      type: object
      properties:
        title:
          type: string
          description: nombre del producto
        description:
          type: string
          description: descripcion del producto
        price:
          type: number
          description: precio del producto
        code:
          type: number
          description: codigo del producto
        status:
          type: boolean
          description: determina si hay producto en stock
        thumbnails:
          type: [string]
          description: imagenes del producto
        stock:
          type: number
          description: cantidad en stock
        category:
          type: string
          description: categoria del producto
        owner:
          type: mongoose.Schema.Types.ObjectId
          description: id mongodb del usuario propietario del producto 
      example:
        title: ZAPATILLAS MONTAGNE PRUEBA REPOSITORY2
        description: zapatillas trekking
        price: 45000
        code: 3043
        status: false
        thumbnails: ["https://newsport.vtexassets.com/arquivos/ids/16130385-1200-auto?v=638208793327870000&width=1200&height=auto&aspect=true"]
        stock: 100
        category: zapatillas
  requestBodies:
    updateProduct: 
      type: object
      properties:
        title:
          type: objectId
          description: nombre del producto
        description:
          type: string
          description: descripcion del producto
        price:
          type: number
          description: precio del producto
        code:
          type: number
          description: codigo del producto
        status:
          type: boolean
          description: determina si hay producto en stock
        thumbnails:
          type: [string]
          description: imagenes del producto
        stock:
          type: number
          description: cantidad en stock
        category:
          type: string
          description: categoria del producto
        owner:
          type: mongoose.Schema.Types.ObjectId
          description: id mongodb del usuario propietario del producto 
      example:
        title: ZAPATILLAS MONTAGNE PRUEBA REPOSITORY2
        description: zapatillas trekking
        price: 45000
        code: 3043
        status: false
        thumbnails: ["https://newsport.vtexassets.com/arquivos/ids/16130385-1200-auto?v=638208793327870000&width=1200&height=auto&aspect=true"]
        stock: 100
        category: zapatillas
